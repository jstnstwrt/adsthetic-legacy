{"version":3,"sources":["../../../../server/api/list/list.controller.js"],"names":[],"mappings":"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","file":"list.controller.js","sourcesContent":["/**\n * Using Rails-like standard naming convention for endpoints.\n * GET     /api/lists              ->  index\n * POST    /api/lists              ->  create\n * GET     /api/lists/:id          ->  show\n * PUT     /api/lists/:id          ->  update\n * DELETE  /api/lists/:id          ->  destroy\n */\n\n 'use strict';\n\n import _ from 'lodash';\n import List from './list.model';\n\n function respondWithResult(res, statusCode) {\n  statusCode = statusCode || 200;\n  return function(entity) {\n    if (entity) {\n      res.status(statusCode).json(entity);\n    }\n  };\n}\n\nfunction saveUpdates(updates) {\n  return function(entity) {\n    var updated = _.merge(entity, updates);\n    return updated.saveAsync()\n    .spread(updated => {\n      return updated;\n    });\n  };\n}\n\nfunction removeEntity(res) {\n  return function(entity) {\n    if (entity) {\n      return entity.removeAsync()\n      .then(() => {\n        res.status(204).end();\n      });\n    }\n  };\n}\n\nfunction handleEntityNotFound(res) {\n  return function(entity) {\n    if (!entity) {\n      res.status(404).end();\n      return null;\n    }\n    return entity;\n  };\n}\n\nfunction handleError(res, statusCode) {\n  statusCode = statusCode || 500;\n  return function(err) {\n    res.status(statusCode).send(err);\n  };\n}\n\n// Gets a list of Lists\nexport function index(req, res) {\n  List.findAsync()\n  .then(respondWithResult(res))\n  .catch(handleError(res));\n}\n\n// Gets a list of Lists By the CurrentUser\nexport function indexbycurrentuser(req, res) {\n  List.find({ userId: req.params.currentuserid})\n  .then(respondWithResult(res))\n  .catch(handleError(res));\n}\n\n// Gets a single List from the DB\nexport function show(req, res) {\n  List.findByIdAsync(req.params.id)\n  .then(handleEntityNotFound(res))\n  .then(respondWithResult(res))\n  .catch(handleError(res));\n}\n\n// Creates a new List in the DB\nexport function create(req, res) {\n  if (req.body._id) {\n    delete req.body._id;\n  }\n  List.createAsync(req.body)\n  .then(respondWithResult(res, 201))\n  .catch(handleError(res));\n}\n\n// Updates an existing List in the DB\nexport function update(req, res) {\n  if (req.body._id) {\n    delete req.body._id;\n  }\n  List.findByIdAsync(req.params.id)\n  .then(handleEntityNotFound(res))\n  .then(saveUpdates(req.body))\n  .then(respondWithResult(res))\n  .catch(handleError(res));\n}\n\n// Deletes a List from the DB\nexport function destroy(req, res) {\n  List.findByIdAsync(req.params.id)\n  .then(handleEntityNotFound(res))\n  .then(removeEntity(res))\n  .catch(handleError(res));\n}\n"]}