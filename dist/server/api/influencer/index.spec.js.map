{"version":3,"sources":["../../../../server/api/influencer/index.spec.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAEb,IAAI,UAAU,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC,eAAe,EAAE,CAAC;;AAEzD,IAAI,kBAAkB,GAAG;AACvB,OAAK,EAAE,sBAAsB;AAC7B,MAAI,EAAE,qBAAqB;AAC3B,QAAM,EAAE,uBAAuB;AAC/B,QAAM,EAAE,uBAAuB;AAC/B,SAAO,EAAE,wBAAwB;CAClC,CAAC;;AAEF,IAAI,UAAU,GAAG;AACf,KAAG,EAAE,KAAK,CAAC,GAAG,EAAE;AAChB,KAAG,EAAE,KAAK,CAAC,GAAG,EAAE;AAChB,OAAK,EAAE,KAAK,CAAC,GAAG,EAAE;AAClB,MAAI,EAAE,KAAK,CAAC,GAAG,EAAE;AACjB,YAAQ,KAAK,CAAC,GAAG,EAAE;CACpB,CAAC;;;AAGF,IAAI,eAAe,GAAG,UAAU,CAAC,YAAY,EAAE;AAC7C,WAAS,EAAE;AACT,UAAM,EAAE,kBAAW;AACjB,aAAO,UAAU,CAAC;KACnB;GACF;AACD,2BAAyB,EAAE,kBAAkB;CAC9C,CAAC,CAAC;;AAEH,QAAQ,CAAC,wBAAwB,EAAE,YAAW;;AAE5C,IAAE,CAAC,0CAA0C,EAAE,YAAW;AACxD,mBAAe,CAAC,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;GAC1C,CAAC,CAAC;;AAEH,UAAQ,CAAC,sBAAsB,EAAE,YAAW;;AAE1C,MAAE,CAAC,6CAA6C,EAAE,YAAW;AAC3D,gBAAU,CAAC,GAAG,CACX,QAAQ,CAAC,GAAG,EAAE,sBAAsB,CAAC,CACrC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;KAChC,CAAC,CAAC;GAEJ,CAAC,CAAC;;AAEH,UAAQ,CAAC,0BAA0B,EAAE,YAAW;;AAE9C,MAAE,CAAC,4CAA4C,EAAE,YAAW;AAC1D,gBAAU,CAAC,GAAG,CACX,QAAQ,CAAC,MAAM,EAAE,qBAAqB,CAAC,CACvC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;KAChC,CAAC,CAAC;GAEJ,CAAC,CAAC;;AAEH,UAAQ,CAAC,uBAAuB,EAAE,YAAW;;AAE3C,MAAE,CAAC,8CAA8C,EAAE,YAAW;AAC5D,gBAAU,CAAC,IAAI,CACZ,QAAQ,CAAC,GAAG,EAAE,uBAAuB,CAAC,CACtC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;KAChC,CAAC,CAAC;GAEJ,CAAC,CAAC;;AAEH,UAAQ,CAAC,0BAA0B,EAAE,YAAW;;AAE9C,MAAE,CAAC,8CAA8C,EAAE,YAAW;AAC5D,gBAAU,CAAC,GAAG,CACX,QAAQ,CAAC,MAAM,EAAE,uBAAuB,CAAC,CACzC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;KAChC,CAAC,CAAC;GAEJ,CAAC,CAAC;;AAEH,UAAQ,CAAC,4BAA4B,EAAE,YAAW;;AAEhD,MAAE,CAAC,8CAA8C,EAAE,YAAW;AAC5D,gBAAU,CAAC,KAAK,CACb,QAAQ,CAAC,MAAM,EAAE,uBAAuB,CAAC,CACzC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;KAChC,CAAC,CAAC;GAEJ,CAAC,CAAC;;AAEH,UAAQ,CAAC,6BAA6B,EAAE,YAAW;;AAEjD,MAAE,CAAC,+CAA+C,EAAE,YAAW;AAC7D,gBAAU,UAAO,CACd,QAAQ,CAAC,MAAM,EAAE,wBAAwB,CAAC,CAC1C,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;KAChC,CAAC,CAAC;GAEJ,CAAC,CAAC;CAEJ,CAAC,CAAC","file":"index.spec.js","sourcesContent":["'use strict';\n\nvar proxyquire = require('proxyquire').noPreserveCache();\n\nvar influencerCtrlStub = {\n  index: 'influencerCtrl.index',\n  show: 'influencerCtrl.show',\n  create: 'influencerCtrl.create',\n  update: 'influencerCtrl.update',\n  destroy: 'influencerCtrl.destroy'\n};\n\nvar routerStub = {\n  get: sinon.spy(),\n  put: sinon.spy(),\n  patch: sinon.spy(),\n  post: sinon.spy(),\n  delete: sinon.spy()\n};\n\n// require the index with our stubbed out modules\nvar influencerIndex = proxyquire('./index.js', {\n  'express': {\n    Router: function() {\n      return routerStub;\n    }\n  },\n  './influencer.controller': influencerCtrlStub\n});\n\ndescribe('influencer API Router:', function() {\n\n  it('should return an express router instance', function() {\n    influencerIndex.should.equal(routerStub);\n  });\n\n  describe('GET /api/influencers', function() {\n\n    it('should route to influencer.controller.index', function() {\n      routerStub.get\n        .withArgs('/', 'influencerCtrl.index')\n        .should.have.been.calledOnce;\n    });\n\n  });\n\n  describe('GET /api/influencers/:id', function() {\n\n    it('should route to influencer.controller.show', function() {\n      routerStub.get\n        .withArgs('/:id', 'influencerCtrl.show')\n        .should.have.been.calledOnce;\n    });\n\n  });\n\n  describe('POST /api/influencers', function() {\n\n    it('should route to influencer.controller.create', function() {\n      routerStub.post\n        .withArgs('/', 'influencerCtrl.create')\n        .should.have.been.calledOnce;\n    });\n\n  });\n\n  describe('PUT /api/influencers/:id', function() {\n\n    it('should route to influencer.controller.update', function() {\n      routerStub.put\n        .withArgs('/:id', 'influencerCtrl.update')\n        .should.have.been.calledOnce;\n    });\n\n  });\n\n  describe('PATCH /api/influencers/:id', function() {\n\n    it('should route to influencer.controller.update', function() {\n      routerStub.patch\n        .withArgs('/:id', 'influencerCtrl.update')\n        .should.have.been.calledOnce;\n    });\n\n  });\n\n  describe('DELETE /api/influencers/:id', function() {\n\n    it('should route to influencer.controller.destroy', function() {\n      routerStub.delete\n        .withArgs('/:id', 'influencerCtrl.destroy')\n        .should.have.been.calledOnce;\n    });\n\n  });\n\n});\n"]}