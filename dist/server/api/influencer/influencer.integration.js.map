{"version":3,"sources":["../../../../server/api/influencer/influencer.integration.js"],"names":[],"mappings":"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","file":"influencer.integration.js","sourcesContent":["'use strict';\n\nvar app = require('../..');\nimport request from 'supertest';\n\nvar newInfluencer;\n\ndescribe('Influencer API:', function() {\n\n  describe('GET /api/influencers', function() {\n    var influencers;\n\n    beforeEach(function(done) {\n      request(app)\n        .get('/api/influencers')\n        .expect(200)\n        .expect('Content-Type', /json/)\n        .end((err, res) => {\n          if (err) {\n            return done(err);\n          }\n          influencers = res.body;\n          done();\n        });\n    });\n\n    it('should respond with JSON array', function() {\n      influencers.should.be.instanceOf(Array);\n    });\n\n  });\n\n  describe('POST /api/influencers', function() {\n    beforeEach(function(done) {\n      request(app)\n        .post('/api/influencers')\n        .send({\n          name: 'New Influencer',\n          instagramId: 'This is the brand new influencer!!!'\n        })\n        .expect(201)\n        .expect('Content-Type', /json/)\n        .end((err, res) => {\n          if (err) {\n            return done(err);\n          }\n          newInfluencer = res.body;\n          done();\n        });\n    });\n\n    it('should respond with the newly created influencer', function() {\n      newInfluencer.name.should.equal('New Influencer');\n      newInfluencer.instagramId.should.equal('This is the brand new influencer!!!');\n    });\n\n  });\n\n  describe('GET /api/influencers/:id', function() {\n    var influencer;\n\n    beforeEach(function(done) {\n      request(app)\n        .get('/api/influencers/' + newInfluencer._id)\n        .expect(200)\n        .expect('Content-Type', /json/)\n        .end((err, res) => {\n          if (err) {\n            return done(err);\n          }\n          influencer = res.body;\n          done();\n        });\n    });\n\n    afterEach(function() {\n      influencer = {};\n    });\n\n    it('should respond with the requested influencer', function() {\n      influencer.name.should.equal('New Influencer');\n      influencer.instagramId.should.equal('This is the brand new influencer!!!');\n    });\n\n  });\n\n  describe('PUT /api/influencers/:id', function() {\n    var updatedInfluencer;\n\n    beforeEach(function(done) {\n      request(app)\n        .put('/api/influencers/' + newInfluencer._id)\n        .send({\n          name: 'Updated Influencer',\n          instagramId: 'This is the updated influencer!!!'\n        })\n        .expect(200)\n        .expect('Content-Type', /json/)\n        .end(function(err, res) {\n          if (err) {\n            return done(err);\n          }\n          updatedInfluencer = res.body;\n          done();\n        });\n    });\n\n    afterEach(function() {\n      updatedInfluencer = {};\n    });\n\n    it('should respond with the updated influencer', function() {\n      updatedInfluencer.name.should.equal('Updated Influencer');\n      updatedInfluencer.instagramId.should.equal('This is the updated influencer!!!');\n    });\n\n  });\n\n  describe('DELETE /api/influencers/:id', function() {\n\n    it('should respond with 204 on successful removal', function(done) {\n      request(app)\n        .delete('/api/influencers/' + newInfluencer._id)\n        .expect(204)\n        .end((err, res) => {\n          if (err) {\n            return done(err);\n          }\n          done();\n        });\n    });\n\n    it('should respond with 404 when influencer does not exist', function(done) {\n      request(app)\n        .delete('/api/influencers/' + newInfluencer._id)\n        .expect(404)\n        .end((err, res) => {\n          if (err) {\n            return done(err);\n          }\n          done();\n        });\n    });\n\n  });\n\n});\n"]}